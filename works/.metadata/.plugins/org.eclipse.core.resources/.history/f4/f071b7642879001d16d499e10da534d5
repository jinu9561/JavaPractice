import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import java.awt.TextArea;

import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.awt.event.ActionEvent;
import javax.swing.SwingConstants;
import javax.swing.JTextArea;
import java.awt.Color;

public class StudentManagerMain extends JFrame {

	private JPanel contentPane;
	private static JTextField t1;
	private static JTextField t2;
	private static JTextField t3;
	private static JTextField t4;
	private static JTextArea textArea;
	private static int stdIdTemp;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					StudentManagerMain frame = new StudentManagerMain();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public StudentManagerMain() {
		setTitle("HUFS Student Manager");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 732, 543);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel l1 = new JLabel("ID");
		l1.setFont(new Font("±¼¸²", Font.BOLD, 13));
		l1.setBounds(35, 29, 56, 28);
		contentPane.add(l1);
		
		JLabel l2 = new JLabel("NAME");
		l2.setFont(new Font("±¼¸²", Font.BOLD, 13));
		l2.setBounds(35, 67, 56, 28);
		contentPane.add(l2);
		
		JLabel l3 = new JLabel("ADDRESS");
		l3.setFont(new Font("±¼¸²", Font.BOLD, 13));
		l3.setBounds(35, 105, 105, 28);
		contentPane.add(l3);
		
		JLabel l4 = new JLabel("DEPARTMENT");
		l4.setFont(new Font("±¼¸²", Font.BOLD, 13));
		l4.setBounds(35, 142, 105, 28);
		contentPane.add(l4);
		
		t1 = new JTextField();
		t1.setBounds(152, 30, 154, 28);
		contentPane.add(t1);
		t1.setColumns(10);
		
		t2 = new JTextField();
		t2.setColumns(10);
		t2.setBounds(152, 66, 533, 28);
		contentPane.add(t2);
		
		t3 = new JTextField();
		t3.setColumns(10);
		t3.setBounds(152, 104, 533, 28);
		contentPane.add(t3);
		
		t4 = new JTextField();
		t4.setColumns(10);
		t4.setBounds(152, 142, 533, 28);
		contentPane.add(t4);
		
		JButton btnAdd = new JButton("ADD");
		btnAdd.setFont(new Font("±¼¸²", Font.BOLD, 10));
		btnAdd.setBounds(152, 180, 261, 28);
		contentPane.add(btnAdd);
		
		JButton btnDisplay = new JButton("DISPLAY");
		btnDisplay.setFont(new Font("±¼¸²", Font.BOLD, 10));
		btnDisplay.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnDisplay.setBounds(424, 180, 261, 28);
		contentPane.add(btnDisplay);
		
		JButton btnSearch = new JButton("SEARCH");
		btnSearch.setFont(new Font("±¼¸²", Font.BOLD, 10));
		btnSearch.setBounds(429, 29, 79, 28);
		contentPane.add(btnSearch);
		
		JTextArea displayPanel = new JTextArea();
		displayPanel.setText("HUFS Student Manager Panel");
		displayPanel.setBackground(Color.LIGHT_GRAY);
		displayPanel.setBounds(35, 218, 650, 20);
		contentPane.add(displayPanel);
		
		JButton btnUpdate = new JButton("UPDATE");
		btnUpdate.setFont(new Font("±¼¸²", Font.BOLD, 10));
		btnUpdate.setBounds(606, 29, 79, 28);
		contentPane.add(btnUpdate);
		
		JButton btnDelete = new JButton("DELETE");
		btnDelete.setFont(new Font("±¼¸²", Font.BOLD, 10));
		btnDelete.setBounds(517, 29, 79, 28);
		contentPane.add(btnDelete);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(35, 235, 650, 231);
		contentPane.add(scrollPane);
		
		textArea = new JTextArea();
		scrollPane.setViewportView(textArea);
		textArea.setBackground(new Color(227, 227, 227));
		
		JButton btnCourse = new JButton("Add courses");
		btnCourse.setFont(new Font("±¼¸²", Font.BOLD, 10));
		btnCourse.setBounds(314, 29, 105, 28);
		contentPane.add(btnCourse);
		
		JButton btnClear = new JButton("clear");
		btnClear.setFont(new Font("±¼¸²", Font.BOLD, 12));
		btnClear.setBounds(594, 476, 91, 23);
		contentPane.add(btnClear);
		
//============================================================================
		btnAdd.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					addStd();
					t1.setText(null);
					t2.setText(null);
					t3.setText(null);
					t4.setText(null);
				} catch (IOException e1) {
					e1.printStackTrace();
				} catch (NumberFormatException e2) {
					JOptionPane.showMessageDialog(null, "Invalid ID or score", "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
					// ¿¡·¯½Ã ÆË¾÷Ã¢
				}
			}
		});
		
		btnDisplay.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					display();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		
		btnClear.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				textArea.setText(null);
				t1.setText(null);
				t2.setText(null);
				t3.setText(null);
				t4.setText(null);
			}
		});
		
		btnSearch.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					search();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (NumberFormatException e2) {
					JOptionPane.showMessageDialog(null, "Invalid ID or score", "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
					// ¿¡·¯½Ã ÆË¾÷Ã¢
				}
			}
		});
		
		btnUpdate.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					stdIdTemp = Integer.parseInt(t1.getText());
					StudentManagerUpdate stdUpdate = new StudentManagerUpdate();
					stdUpdate.setVisible(true);
					dispose();
				} catch (NumberFormatException e2) {
					JOptionPane.showMessageDialog(null, "Invalid ID or score", "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
					// ¿¡·¯½Ã ÆË¾÷Ã¢
				}
			}  
		});
		
		btnDelete.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					deleteStd();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		
		
		btnCourse.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				stdIdTemp = Integer.parseInt(t1.getText());
				RegisteredCourseManger course = new RegisteredCourseManger();
				course.setVisible(true);
				dispose();
			}
		});
	}

	public static int getSTDID() {
		return stdIdTemp;
	}
	
	public static void addStd() throws IOException {
		
		java.io.FileWriter std = new java.io.FileWriter("HUFS_student.txt",true); // true -> over write µÇÁö ¾ÊÀ½
		java.io.FileWriter course = new java.io.FileWriter("student's_course_list.txt",true);
		java.io.PrintWriter stdOutput = new java.io.PrintWriter(std);
		
		int ID = Integer.parseInt(t1.getText());
		String name = t2.getText();
		String address = t3.getText();
		String department = t4.getText();

		stdOutput.println(ID);
		stdOutput.println(name);
		stdOutput.println(address);
		stdOutput.println(department);
		
		std.close();
		course.close();
		stdOutput.close();
	}
	
	public static void display() throws FileNotFoundException {
		
		java.io.File file = new java.io.File("HUFS_student.txt");
		Scanner input = new Scanner(file);
		
		while (input.hasNext()) {

			int id = input.nextInt();
			String name = input.next();
			String address = input.next();
			String dept = input.next();
			
			textArea.append("¡Ü ID: " + id + "\n");
			textArea.append("    NAME: " + name + "\n");
			textArea.append("    ADDRESS: " + address + "\n");
			textArea.append("    DEPARTMENT: " + dept + "\n");
		}
		input.close();
	}
	
	public static void search() throws FileNotFoundException {
		
		java.io.File file = new java.io.File("HUFS_student.txt");
		Scanner input = new Scanner(file);
		
		int idToSearch = Integer.parseInt(t1.getText());
		boolean flag = false;
		
		while (input.hasNext()) {

			int id = input.nextInt();
			String name = input.next();
			String address = input.next();
			String dept = input.next();
			if(id == idToSearch) {
				textArea.append("¡Ü ID: " + id + "\n");
				textArea.append("    NAME: " + name + "\n");
				textArea.append("    ADDRESS: " + address + "\n");
				textArea.append("    DEPARTMENT: " + dept + "\n");
				flag = true;
			}
		}
		if(!flag) {
			JOptionPane.showMessageDialog(null, "No such ID!!", "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
			// id ¾øÀ»½Ã ¾Ë¸²Ã¢
		}
		input.close();

	}
	
	public static void deleteStd() throws FileNotFoundException {
		java.io.File file = new java.io.File("HUFS_student.txt");
		java.io.File temp = new java.io.File("temp.txt");
		java.io.PrintWriter output = new java.io.PrintWriter(temp);
		Scanner input = new Scanner(file);
		
		int idToUpdate = Integer.parseInt(t1.getText());
		boolean flag = false;
		
		while (input.hasNext()) {
			int id = input.nextInt();
			String name = input.next();
			String address = input.next();
			String dept = input.next();
			
			if(idToUpdate != id) {
				output.println(id);
				output.println(name);
				output.println(address);
				output.println(dept);
			} else {
				flag = true;
			}
		}
		
		input.close();
		output.close();
		
		if(flag == false) {
			// ¾Ë¸²Ã¢¿¡ No such ID!! Ãâ·ÂÇÏ±â
			temp.delete();		
		}
		if(flag == true) {
			file.delete();
			temp.renameTo(file);
		}
	}

}

